//
// Position.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Position: Codable {

    public var _id: Int64?
    public var positionNumber: Int64?
    public var externalId: Int64?
    public var accountId: Int64?
    public var symbol: String?
    public var isBuy: Bool?
    public var digits: Int?
    public var contractSize: Int?
    public var reason: Int?
    public var timeCreate: Date?
    public var timeUpdate: Date?
    public var priceOpen: Double?
    public var priceCurrent: Double?
    public var priceSL: Double?
    public var priceTP: Double?
    public var volumeExt: Double?
    public var swap: Double?
    public var rateProfit: Double?
    public var rateMargin: Double?
    public var comment: String?
    public var volume: Double?
    public var tradeVolume: Double?
    public var commission: Double?

    public init(_id: Int64? = nil, positionNumber: Int64? = nil, externalId: Int64? = nil, accountId: Int64? = nil, symbol: String? = nil, isBuy: Bool? = nil, digits: Int? = nil, contractSize: Int? = nil, reason: Int? = nil, timeCreate: Date? = nil, timeUpdate: Date? = nil, priceOpen: Double? = nil, priceCurrent: Double? = nil, priceSL: Double? = nil, priceTP: Double? = nil, volumeExt: Double? = nil, swap: Double? = nil, rateProfit: Double? = nil, rateMargin: Double? = nil, comment: String? = nil, volume: Double? = nil, tradeVolume: Double? = nil, commission: Double? = nil) {
        self._id = _id
        self.positionNumber = positionNumber
        self.externalId = externalId
        self.accountId = accountId
        self.symbol = symbol
        self.isBuy = isBuy
        self.digits = digits
        self.contractSize = contractSize
        self.reason = reason
        self.timeCreate = timeCreate
        self.timeUpdate = timeUpdate
        self.priceOpen = priceOpen
        self.priceCurrent = priceCurrent
        self.priceSL = priceSL
        self.priceTP = priceTP
        self.volumeExt = volumeExt
        self.swap = swap
        self.rateProfit = rateProfit
        self.rateMargin = rateMargin
        self.comment = comment
        self.volume = volume
        self.tradeVolume = tradeVolume
        self.commission = commission
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case positionNumber
        case externalId
        case accountId
        case symbol
        case isBuy
        case digits
        case contractSize
        case reason
        case timeCreate
        case timeUpdate
        case priceOpen
        case priceCurrent
        case priceSL
        case priceTP
        case volumeExt
        case swap
        case rateProfit
        case rateMargin
        case comment
        case volume
        case tradeVolume
        case commission
    }

}
