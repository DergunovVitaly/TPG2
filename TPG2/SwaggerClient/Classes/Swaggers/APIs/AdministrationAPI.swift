//
// AdministrationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AdministrationAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationAdminiplistGet(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        apiAdministrationAdminiplistGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Administration/adminiplist
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<String> 
     */
    open class func apiAdministrationAdminiplistGetWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/api/Administration/adminiplist"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationAdminiplistPut(body: [String]? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationAdminiplistPutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Administration/adminiplist
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationAdminiplistPutWithRequestBuilder(body: [String]? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/adminiplist"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationChartstorageClearPost(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationChartstorageClearPostWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /api/Administration/chartstorage/clear
     - 

     - :
       - type: http
       - name: Bearer

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationChartstorageClearPostWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/api/Administration/chartstorage/clear"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Returns dictionary of chart type and count of stored candles. Example -  Returns - { \"EURUSD60\" : 1000 }  Where \"EURUSD\" - instrument, 60 - ChartPeriod (hour), 1000 - count of stores EURUSD 60 minutes candles

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationChartstorageGet(completion: @escaping ((_ data: [String:ChartStorageInfo]?,_ error: Error?) -> Void)) {
        apiAdministrationChartstorageGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns dictionary of chart type and count of stored candles. Example -  Returns - { \"EURUSD60\" : 1000 }  Where \"EURUSD\" - instrument, 60 - ChartPeriod (hour), 1000 - count of stores EURUSD 60 minutes candles
     - GET /api/Administration/chartstorage
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "key" : {
    "candlesCount" : 0,
    "rangeStart" : "2000-01-23T04:56:07.000+00:00",
    "rangeEnd" : "2000-01-23T04:56:07.000+00:00"
  }
}}]

     - returns: RequestBuilder<[String:ChartStorageInfo]> 
     */
    open class func apiAdministrationChartstorageGetWithRequestBuilder() -> RequestBuilder<[String:ChartStorageInfo]> {
        let path = "/api/Administration/chartstorage"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[String:ChartStorageInfo]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationHistoryserverGet(completion: @escaping ((_ data: HistoryServerGroupOptions?,_ error: Error?) -> Void)) {
        apiAdministrationHistoryserverGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Administration/historyserver
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "historyServerOptions" : [ {
    "isMain" : true,
    "groupId" : "groupId",
    "host" : "host"
  }, {
    "isMain" : true,
    "groupId" : "groupId",
    "host" : "host"
  } ],
  "key" : "key"
}}]

     - returns: RequestBuilder<HistoryServerGroupOptions> 
     */
    open class func apiAdministrationHistoryserverGetWithRequestBuilder() -> RequestBuilder<HistoryServerGroupOptions> {
        let path = "/api/Administration/historyserver"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<HistoryServerGroupOptions>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationHistoryserverPut(body: UpdateHistoryServerOptionsModel? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationHistoryserverPutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Administration/historyserver
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationHistoryserverPutWithRequestBuilder(body: UpdateHistoryServerOptionsModel? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/historyserver"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationProxyiplistGet(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        apiAdministrationProxyiplistGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Administration/proxyiplist
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<String> 
     */
    open class func apiAdministrationProxyiplistGetWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/api/Administration/proxyiplist"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationProxyiplistPut(body: [String]? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationProxyiplistPutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Administration/proxyiplist
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationProxyiplistPutWithRequestBuilder(body: [String]? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/proxyiplist"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationSignalrconnectedgroupsGet(completion: @escaping ((_ data: [StringInt64StringIEnumerableKeyValuePairIEnumerableKeyValuePair]?,_ error: Error?) -> Void)) {
        apiAdministrationSignalrconnectedgroupsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Administration/signalrconnectedgroups
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example=[ {
  "value" : [ {
    "value" : [ "value", "value" ],
    "key" : 0
  }, {
    "value" : [ "value", "value" ],
    "key" : 0
  } ],
  "key" : "key"
}, {
  "value" : [ {
    "value" : [ "value", "value" ],
    "key" : 0
  }, {
    "value" : [ "value", "value" ],
    "key" : 0
  } ],
  "key" : "key"
} ]}]

     - returns: RequestBuilder<[StringInt64StringIEnumerableKeyValuePairIEnumerableKeyValuePair]> 
     */
    open class func apiAdministrationSignalrconnectedgroupsGetWithRequestBuilder() -> RequestBuilder<[StringInt64StringIEnumerableKeyValuePairIEnumerableKeyValuePair]> {
        let path = "/api/Administration/signalrconnectedgroups"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[StringInt64StringIEnumerableKeyValuePairIEnumerableKeyValuePair]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationSymboltemplatesLastmodifieddateGet(completion: @escaping ((_ data: Date?,_ error: Error?) -> Void)) {
        apiAdministrationSymboltemplatesLastmodifieddateGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Administration/symboltemplates/lastmodifieddate
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example="2000-01-23T04:56:07.000+00:00"}]

     - returns: RequestBuilder<Date> 
     */
    open class func apiAdministrationSymboltemplatesLastmodifieddateGetWithRequestBuilder() -> RequestBuilder<Date> {
        let path = "/api/Administration/symboltemplates/lastmodifieddate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Date>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationSymboltemplatesPut(body: [SymbolTemplate]? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationSymboltemplatesPutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Administration/symboltemplates
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationSymboltemplatesPutWithRequestBuilder(body: [SymbolTemplate]? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/symboltemplates"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationUsersAllGet(completion: @escaping ((_ data: [ApiUserModel]?,_ error: Error?) -> Void)) {
        apiAdministrationUsersAllGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Administration/users/all
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example=[ {
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "signatureKey" : "signatureKey",
  "idToken" : "idToken",
  "description" : "description",
  "userName" : "userName",
  "iPs" : [ "iPs", "iPs" ],
  "enabled" : true
}, {
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "signatureKey" : "signatureKey",
  "idToken" : "idToken",
  "description" : "description",
  "userName" : "userName",
  "iPs" : [ "iPs", "iPs" ],
  "enabled" : true
} ]}]

     - returns: RequestBuilder<[ApiUserModel]> 
     */
    open class func apiAdministrationUsersAllGetWithRequestBuilder() -> RequestBuilder<[ApiUserModel]> {
        let path = "/api/Administration/users/all"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ApiUserModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationUsersDelete(body: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationUsersDeleteWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/Administration/users
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationUsersDeleteWithRequestBuilder(body: String? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter userName: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationUsersGet(userName: String? = nil, completion: @escaping ((_ data: ApiUserModel?,_ error: Error?) -> Void)) {
        apiAdministrationUsersGetWithRequestBuilder(userName: userName).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Administration/users
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "createdDate" : "2000-01-23T04:56:07.000+00:00",
  "signatureKey" : "signatureKey",
  "idToken" : "idToken",
  "description" : "description",
  "userName" : "userName",
  "iPs" : [ "iPs", "iPs" ],
  "enabled" : true
}}]
     - parameter userName: (query)  (optional)

     - returns: RequestBuilder<ApiUserModel> 
     */
    open class func apiAdministrationUsersGetWithRequestBuilder(userName: String? = nil) -> RequestBuilder<ApiUserModel> {
        let path = "/api/Administration/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "userName": userName
        ])


        let requestBuilder: RequestBuilder<ApiUserModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationUsersKeysPut(body: UpdateApiUserKeysModel? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationUsersKeysPutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Administration/users/keys
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationUsersKeysPutWithRequestBuilder(body: UpdateApiUserKeysModel? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/users/keys"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationUsersPost(body: CreateApiUserModel? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationUsersPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /api/Administration/users
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationUsersPostWithRequestBuilder(body: CreateApiUserModel? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAdministrationUsersPut(body: UpdateApiUserModel? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAdministrationUsersPutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Administration/users
     - 

     - :
       - type: http
       - name: Bearer
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAdministrationUsersPutWithRequestBuilder(body: UpdateApiUserModel? = nil) -> RequestBuilder<Void> {
        let path = "/api/Administration/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
