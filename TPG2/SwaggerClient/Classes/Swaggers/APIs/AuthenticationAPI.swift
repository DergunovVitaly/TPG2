//
// AuthenticationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AuthenticationAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthenticationAccountActualizationGet(completion: @escaping ((_ data: ActualizationResultBaseResponse?,_ error: Error?) -> Void)) {
        apiAuthenticationAccountActualizationGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Authentication/account/actualization
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "result" : {
    "tradingHours" : [ {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    }, {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    } ],
    "previousDayLatestQuotes" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "symbol" : "symbol",
      "ask" : 5.533258397034986,
      "bid" : 3.2588565619047607
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "symbol" : "symbol",
      "ask" : 5.533258397034986,
      "bid" : 3.2588565619047607
    } ],
    "latestQuotes" : [ null, null ],
    "client" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "country" : "country",
      "image" : "image",
      "accountList" : [ {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      }, {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      } ],
      "signedInAccountId" : 5,
      "id" : 0,
      "email" : "email"
    },
    "tradingHoursHolidays" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    } ],
    "positions" : [ {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    }, {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    } ],
    "orders" : [ {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    }, {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    } ],
    "symbols" : [ {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    }, {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    } ],
    "symbolGroups" : [ {
      "name" : "name",
      "id" : 4,
      "order" : 0
    }, {
      "name" : "name",
      "id" : 4,
      "order" : 0
    } ]
  },
  "code" : 0,
  "errorMessage" : "errorMessage",
  "isSuccessed" : true,
  "errors" : {
    "key" : "errors"
  }
}}]

     - returns: RequestBuilder<ActualizationResultBaseResponse> 
     */
    open class func apiAuthenticationAccountActualizationGetWithRequestBuilder() -> RequestBuilder<ActualizationResultBaseResponse> {
        let path = "/api/Authentication/account/actualization"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ActualizationResultBaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthenticationRefreshPost(body: RefreshTokenViewModel? = nil, completion: @escaping ((_ data: TokenApiModelBaseResponse?,_ error: Error?) -> Void)) {
        apiAuthenticationRefreshPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/Authentication/refresh
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "result" : {
    "token" : "token",
    "refreshToken" : "refreshToken"
  },
  "code" : 0,
  "errorMessage" : "errorMessage",
  "isSuccessed" : true,
  "errors" : {
    "key" : "errors"
  }
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<TokenApiModelBaseResponse> 
     */
    open class func apiAuthenticationRefreshPostWithRequestBuilder(body: RefreshTokenViewModel? = nil) -> RequestBuilder<TokenApiModelBaseResponse> {
        let path = "/api/Authentication/refresh"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<TokenApiModelBaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthenticationSwitchAccountPost(body: SwitchLogginedAccount? = nil, completion: @escaping ((_ data: AuthenticationResultBaseResponse?,_ error: Error?) -> Void)) {
        apiAuthenticationSwitchAccountPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/Authentication/switchAccount
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "result" : {
    "tradingHours" : [ {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    }, {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    } ],
    "previousDayLatestQuotes" : [ null, null ],
    "latestQuotes" : [ null, null ],
    "client" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "country" : "country",
      "image" : "image",
      "accountList" : [ {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      }, {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      } ],
      "signedInAccountId" : 5,
      "id" : 0,
      "email" : "email"
    },
    "tradingHoursHolidays" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    } ],
    "positions" : [ {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    }, {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    } ],
    "orders" : [ {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    }, {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    } ],
    "symbols" : [ {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    }, {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    } ],
    "token" : "token",
    "refreshToken" : "refreshToken",
    "symbolGroups" : [ {
      "name" : "name",
      "id" : 4,
      "order" : 0
    }, {
      "name" : "name",
      "id" : 4,
      "order" : 0
    } ]
  },
  "code" : 2,
  "errorMessage" : "errorMessage",
  "isSuccessed" : true,
  "errors" : {
    "key" : "errors"
  }
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<AuthenticationResultBaseResponse> 
     */
    open class func apiAuthenticationSwitchAccountPostWithRequestBuilder(body: SwitchLogginedAccount? = nil) -> RequestBuilder<AuthenticationResultBaseResponse> {
        let path = "/api/Authentication/switchAccount"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthenticationResultBaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter token: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthenticationTokenAutologinGet(token: String? = nil, completion: @escaping ((_ data: AuthenticationResultBaseResponse?,_ error: Error?) -> Void)) {
        apiAuthenticationTokenAutologinGetWithRequestBuilder(token: token).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Authentication/token/autologin
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "result" : {
    "tradingHours" : [ {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    }, {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    } ],
    "previousDayLatestQuotes" : [ null, null ],
    "latestQuotes" : [ null, null ],
    "client" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "country" : "country",
      "image" : "image",
      "accountList" : [ {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      }, {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      } ],
      "signedInAccountId" : 5,
      "id" : 0,
      "email" : "email"
    },
    "tradingHoursHolidays" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    } ],
    "positions" : [ {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    }, {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    } ],
    "orders" : [ {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    }, {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    } ],
    "symbols" : [ {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    }, {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    } ],
    "token" : "token",
    "refreshToken" : "refreshToken",
    "symbolGroups" : [ {
      "name" : "name",
      "id" : 4,
      "order" : 0
    }, {
      "name" : "name",
      "id" : 4,
      "order" : 0
    } ]
  },
  "code" : 2,
  "errorMessage" : "errorMessage",
  "isSuccessed" : true,
  "errors" : {
    "key" : "errors"
  }
}}]
     - parameter token: (query)  (optional)

     - returns: RequestBuilder<AuthenticationResultBaseResponse> 
     */
    open class func apiAuthenticationTokenAutologinGetWithRequestBuilder(token: String? = nil) -> RequestBuilder<AuthenticationResultBaseResponse> {
        let path = "/api/Authentication/token/autologin"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "token": token
        ])


        let requestBuilder: RequestBuilder<AuthenticationResultBaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthenticationTokenAutologinPost(body: AuthenticationViewModel? = nil, completion: @escaping ((_ data: StringBaseResponse?,_ error: Error?) -> Void)) {
        apiAuthenticationTokenAutologinPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/Authentication/token/autologin
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "result" : "result",
  "code" : 0,
  "errorMessage" : "errorMessage",
  "isSuccessed" : true,
  "errors" : {
    "key" : "errors"
  }
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<StringBaseResponse> 
     */
    open class func apiAuthenticationTokenAutologinPostWithRequestBuilder(body: AuthenticationViewModel? = nil) -> RequestBuilder<StringBaseResponse> {
        let path = "/api/Authentication/token/autologin"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<StringBaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthenticationTokenPost(body: AuthenticationViewModel? = nil, completion: @escaping ((_ data: AuthenticationResultBaseResponse?,_ error: Error?) -> Void)) {
        apiAuthenticationTokenPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/Authentication/token
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "result" : {
    "tradingHours" : [ {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    }, {
      "intervals" : [ [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ], [ {
        "start" : "start",
        "close" : "close"
      }, {
        "start" : "start",
        "close" : "close"
      } ] ],
      "name" : "name",
      "id" : 7
    } ],
    "previousDayLatestQuotes" : [ null, null ],
    "latestQuotes" : [ null, null ],
    "client" : {
      "firstName" : "firstName",
      "lastName" : "lastName",
      "country" : "country",
      "image" : "image",
      "accountList" : [ {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      }, {
        "leverage" : 5,
        "balanceWithBonusesAndCredit" : 7.457744773683766,
        "stopOut" : 2,
        "bonus" : 1.1730742509559433,
        "groupId" : 5,
        "lastLoginDate" : "2000-01-23T04:56:07.000+00:00",
        "isDemo" : true,
        "marginFree" : 1.2315135367772556,
        "equity" : 6.84685269835264,
        "lastLoginIp" : "lastLoginIp",
        "balance" : 2.027123023002322,
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "marginCall" : 9,
        "lastTradeDate" : "2000-01-23T04:56:07.000+00:00",
        "disabled" : true,
        "currency" : "currency",
        "id" : 6,
        "minDeposit" : 7.061401241503109,
        "socialTradingStatus" : 4,
        "credit" : 4.145608029883936,
        "margin" : 7.386281948385884,
        "clientId" : 1,
        "orderCount" : 3,
        "totalProfits" : 1.4894159098541704,
        "allowTrade" : true,
        "marginLevel" : 1.0246457001441578,
        "username" : "username"
      } ],
      "signedInAccountId" : 5,
      "id" : 0,
      "email" : "email"
    },
    "tradingHoursHolidays" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "intervals" : {
        "intervals" : [ null, null ],
        "id" : 3,
        "workTimeEnabled" : true
      },
      "everyYear" : true,
      "description" : "description",
      "id" : 0,
      "enabled" : true,
      "symbols" : [ "symbols", "symbols" ]
    } ],
    "positions" : [ {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    }, {
      "isBuy" : true,
      "tradeVolume" : 0.43431398824148815,
      "symbol" : "symbol",
      "reason" : 0,
      "volumeExt" : 4.86315908102884,
      "timeUpdate" : "2000-01-23T04:56:07.000+00:00",
      "swap" : 6.073898085781152,
      "externalId" : 1,
      "positionNumber" : 4,
      "volume" : 3.901545264248647,
      "accountId" : 4,
      "timeCreate" : "2000-01-23T04:56:07.000+00:00",
      "priceCurrent" : 0.5199002018724985,
      "digits" : 7,
      "contractSize" : 9,
      "priceOpen" : 9.702963800023566,
      "priceSL" : 7.933506881737151,
      "rateProfit" : 8.251625748923757,
      "comment" : "comment",
      "commission" : 2.9409642974827896,
      "id" : 6,
      "priceTP" : 5.507386964179881,
      "rateMargin" : 4.459605034958679
    } ],
    "orders" : [ {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    }, {
      "symbol" : "symbol",
      "reason" : 1,
      "volumeInitial" : 9.897492629215506,
      "priceOrdered" : 8.761432466225475,
      "externalId" : 8,
      "timeDone" : "2000-01-23T04:56:07.000+00:00",
      "volumeCurrent" : 5.877124706116695,
      "type" : 3,
      "timeSetup" : "2000-01-23T04:56:07.000+00:00",
      "accountId" : 6,
      "typeFill" : 9,
      "positionId" : 3,
      "digits" : 4,
      "contractSize" : 8,
      "priceExecuted" : 0.4182561061793122,
      "priceSL" : 5.299143560275359,
      "volumeInitialExt" : 8.37823741034869,
      "comment" : "comment",
      "id" : 1,
      "state" : 9,
      "volumeCurrentExt" : 7.606863723092579,
      "priceTP" : 5.312489704336296,
      "timeExpiration" : "2000-01-23T04:56:07.000+00:00",
      "rateMargin" : 3.111202833403195
    } ],
    "symbols" : [ {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    }, {
      "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
      "leverage" : 6,
      "symbolGroup" : 0,
      "swapCurrency" : 1,
      "hidden" : true,
      "displayName" : "displayName",
      "groupId" : 9,
      "tradingHoursId" : 4,
      "description" : "description",
      "currentQuote" : {
        "date" : "2000-01-23T04:56:07.000+00:00",
        "symbol" : "symbol",
        "ask" : 5.533258397034986,
        "bid" : 3.2588565619047607
      },
      "units" : "units",
      "negativeSpread" : true,
      "groupCurrency" : "groupCurrency",
      "threeDaysSwap" : 6,
      "spreadMax" : 6,
      "marginHedge" : 8.969578798196912,
      "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
      "commissionEntry" : true,
      "contractSize" : 3,
      "commission" : 7.143538047012306,
      "disabled" : true,
      "id" : 9,
      "gapLevel" : 6,
      "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "spreadAsk" : 6,
      "minimalVolume" : 7.740351818741173,
      "spreadBid" : 9,
      "calculationMode" : 3,
      "swapLong" : 2.8841621266687802,
      "swapShort" : 6.778324963048013,
      "commissionType" : 7,
      "commissionCurrency" : 0,
      "volumeStep" : 3.0576100241049344,
      "spreadType" : 8,
      "stopLevel" : 6,
      "name" : "name",
      "spreadMin" : 3,
      "digits" : 5,
      "profitCurrency" : "profitCurrency",
      "profitRateCalculationType" : 7,
      "tradeForbidden" : true,
      "favorite" : true,
      "marginCurrency" : "marginCurrency",
      "maximalVolume" : 3.0205796992916243,
      "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
    } ],
    "token" : "token",
    "refreshToken" : "refreshToken",
    "symbolGroups" : [ {
      "name" : "name",
      "id" : 4,
      "order" : 0
    }, {
      "name" : "name",
      "id" : 4,
      "order" : 0
    } ]
  },
  "code" : 2,
  "errorMessage" : "errorMessage",
  "isSuccessed" : true,
  "errors" : {
    "key" : "errors"
  }
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<AuthenticationResultBaseResponse> 
     */
    open class func apiAuthenticationTokenPostWithRequestBuilder(body: AuthenticationViewModel? = nil) -> RequestBuilder<AuthenticationResultBaseResponse> {
        let path = "/api/Authentication/token"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthenticationResultBaseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
