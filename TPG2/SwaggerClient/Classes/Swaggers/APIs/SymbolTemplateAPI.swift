//
// SymbolTemplateAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SymbolTemplateAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSymbolTemplateAllGet(completion: @escaping ((_ data: [SymbolTemplate]?,_ error: Error?) -> Void)) {
        apiSymbolTemplateAllGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/SymbolTemplate/all
     - 

     - :
       - type: http
       - name: Bearer
     - examples: [{contentType=application/json, example=[ {
  "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
  "leverage" : 4,
  "symbolGroup" : 5,
  "swapCurrency" : 9,
  "hidden" : true,
  "displayName" : "displayName",
  "groupId" : 0,
  "tradingHoursId" : 9,
  "description" : "description",
  "units" : "units",
  "negativeSpread" : true,
  "groupCurrency" : "groupCurrency",
  "threeDaysSwap" : 6,
  "spreadMax" : 7,
  "marginHedge" : 9.369310271410669,
  "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
  "commissionEntry" : true,
  "contractSize" : 1,
  "commission" : 6.84685269835264,
  "disabled" : true,
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "gapLevel" : 1,
  "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
  "expirationDate" : "2000-01-23T04:56:07.000+00:00",
  "spreadAsk" : 5,
  "image" : "image",
  "lastModifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "minimalVolume" : 6.683562403749608,
  "spreadBid" : 5,
  "calculationMode" : 1,
  "swapLong" : 3.616076749251911,
  "swapShort" : 2.027123023002322,
  "commissionType" : 1,
  "commissionCurrency" : 7,
  "volumeStep" : 9.018348186070783,
  "spreadType" : 1,
  "stopLevel" : 4,
  "name" : "name",
  "spreadMin" : 2,
  "digits" : 7,
  "profitCurrency" : "profitCurrency",
  "profitRateCalculationType" : 6,
  "tradeForbidden" : true,
  "marginRateCalculationType" : 3,
  "marginCurrency" : "marginCurrency",
  "maximalVolume" : 8.762042012749001,
  "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
}, {
  "profitRateSecondSymbolName" : "profitRateSecondSymbolName",
  "leverage" : 4,
  "symbolGroup" : 5,
  "swapCurrency" : 9,
  "hidden" : true,
  "displayName" : "displayName",
  "groupId" : 0,
  "tradingHoursId" : 9,
  "description" : "description",
  "units" : "units",
  "negativeSpread" : true,
  "groupCurrency" : "groupCurrency",
  "threeDaysSwap" : 6,
  "spreadMax" : 7,
  "marginHedge" : 9.369310271410669,
  "profitRateFirstSymbolName" : "profitRateFirstSymbolName",
  "commissionEntry" : true,
  "contractSize" : 1,
  "commission" : 6.84685269835264,
  "disabled" : true,
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "gapLevel" : 1,
  "marginRateFirstSymbolName" : "marginRateFirstSymbolName",
  "expirationDate" : "2000-01-23T04:56:07.000+00:00",
  "spreadAsk" : 5,
  "image" : "image",
  "lastModifiedDate" : "2000-01-23T04:56:07.000+00:00",
  "minimalVolume" : 6.683562403749608,
  "spreadBid" : 5,
  "calculationMode" : 1,
  "swapLong" : 3.616076749251911,
  "swapShort" : 2.027123023002322,
  "commissionType" : 1,
  "commissionCurrency" : 7,
  "volumeStep" : 9.018348186070783,
  "spreadType" : 1,
  "stopLevel" : 4,
  "name" : "name",
  "spreadMin" : 2,
  "digits" : 7,
  "profitCurrency" : "profitCurrency",
  "profitRateCalculationType" : 6,
  "tradeForbidden" : true,
  "marginRateCalculationType" : 3,
  "marginCurrency" : "marginCurrency",
  "maximalVolume" : 8.762042012749001,
  "marginRateSecondSymbolName" : "marginRateSecondSymbolName"
} ]}]

     - returns: RequestBuilder<[SymbolTemplate]> 
     */
    open class func apiSymbolTemplateAllGetWithRequestBuilder() -> RequestBuilder<[SymbolTemplate]> {
        let path = "/api/SymbolTemplate/all"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[SymbolTemplate]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
